{"version":3,"sources":["components/CategoryAdd.component.js","components/GifGridItem.component.js","service/GetGif.service.js","components/GifGrid.component.js","hooks/useFetch.hook.js","GifExpertApp.component.js","index.js"],"names":["CategoryAdd","setCategory","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","category","id","area","type","value","onChange","target","GifGridItem","title","url","className","src","alt","getGif","a","apiUrl","encodeURI","fetch","response","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","catch","console","log","useFetch","imagenes","GifExpertApp","item","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAuB,IAApBC,EAAmB,EAAnBA,YAE3B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAUA,OACI,sBAAMC,SARW,SAAEC,GACnBA,EAAEC,iBACFJ,EAAWK,OAAOC,OAAS,GACpBR,GAAa,SAAAS,GAAQ,OAAM,CAAEC,GAAI,iBAAkBC,KAAMT,IAApC,mBAAqDO,OACjFN,EAAe,KAIf,SACI,uBACIS,KAAK,OACLC,MAAQX,EACRY,SAdc,SAAET,GAAF,OAASF,EAAeE,EAAEU,OAAOF,a,QCJlDG,EAAc,SAAC,GAAyB,EAAtBN,GAAuB,IAAnBO,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,IACtC,OACI,sBAAKC,UAAU,wCAAf,UACI,qBAAKC,IAAMF,EAAMG,IAAMJ,IACvB,kCAAMA,EAAN,W,uBCNCK,EAAM,uCAAG,WAAQX,GAAR,uBAAAY,EAAA,6DAEZC,EAFY,iDAEwCC,UAAUd,GAFlD,+DAGKe,MAAOF,GAHZ,cAGZG,EAHY,gBAIKA,EAASC,OAJd,uBAIVC,EAJU,EAIVA,KAGFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHtB,GAAIsB,EAAItB,GACRO,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QAXxB,kBAeXY,GAfW,4CAAH,sDCINK,EAAU,SAAC,GAAc,IAAZxB,EAAW,EAAXA,KAEtB,ECHoB,SAACA,GAErB,MAA0BV,mBAAS,CAC/B4B,KAAM,GACNO,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAgBA,OAXAC,qBAAU,WACNjB,EAAOX,GACF6B,MAAK,SAAAC,GACFH,EAAS,CACLT,KAAMY,EACNL,SAAS,OAGhBM,MAAMC,QAAQC,OACpB,CAACjC,IAEG0B,EDf6BQ,CAASlC,GAA/BmC,EAAd,EAAQjB,KAAgBO,EAAxB,EAAwBA,QAExB,OACI,qCACI,mCAAMzB,EAAN,OACCyB,GAAW,0CACZ,qBAAKjB,UAAU,YAAf,SAEQ2B,EAASf,KAAI,SAAAC,GAAG,OAAI,cAAC,EAAD,eAA+BA,GAAbA,EAAItB,aETjDqC,EAAe,WAExB,MAAgC9C,mBAAS,CACrC,CACIS,GAAI,gBACJC,KAAM,kBAHd,mBAAOF,EAAP,KAAiBT,EAAjB,KAaA,OACI,qCACI,8CAEA,cAAC,EAAD,CAAaA,YAAcA,IAE3B,uBACA,6BAEQS,EAASsB,KAAK,SAAAiB,GAAI,OAAI,cAAC,EAAD,CAAyBrC,KAAOqC,EAAKrC,MAAtBqC,EAAKtC,a,MCvB9DuC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2d35d289.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types';\n\nexport const CategoryAdd = ( { setCategory } ) => {\n\n    const [inputValue, setInputValue] = useState('')\n    const handleInputChange = ( e ) => setInputValue( e.target.value );\n\n    const handleSubmit = ( e ) => {\n        e.preventDefault();\n        inputValue.trim().length > 2\n            && setCategory( category => [ { id: 'etrwerrt6578*&', area: inputValue }, ...category]);\n        setInputValue( '' );\n    }\n\n    return (\n        <form onSubmit={ handleSubmit }>\n            <input \n                type=\"text\"\n                value={ inputValue }\n                onChange={ handleInputChange }\n            />\n        </form>\n    )\n}\n\nCategoryAdd.propTypes = {\n    setCategory: PropTypes.func.isRequired,\n}\n\n","import React from 'react'\n\nexport const GifGridItem = ( { id, title, url } ) => {\n    return (\n        <div className=\"card animate__animated animate__pulse\">\n            <img src={ url } alt={ title }/>\n            <p> { title } </p>\n        </div>\n    )\n}","export const getGif = async ( area ) => {\n        \n    const apiUrl = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(area) }&limit=10&api_key=AXuDDzsw2aFarCLN2foDcNv8g1IF1cOa`;\n    const response = await fetch( apiUrl );\n    const { data } = await response.json();\n    // const { id, title, images: { downsized_medium: { url: girUrl } }, ...resto } = data;\n\n    const gifs = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n\n    return gifs;\n}","import React from 'react'\nimport { GifGridItem } from './GifGridItem.component';\nimport { useFetch } from '../hooks/useFetch.hook';\n\nexport const GifGrid = ({ area }) => {\n\n    const { data: imagenes, loading } = useFetch(area);\n\n    return (\n        <>\n            <h4> {area} </h4>\n            {loading && <p> Loading </p>}\n            <div className=\"card-grid\">\n                {\n                    imagenes.map(img => <GifGridItem key={img.id}  {...img} />)\n                }\n            </div>\n        </>\n    )\n}","import { useState, useEffect } from 'react';\nimport { getGif } from '../service/GetGif.service'\n\nexport const useFetch = (area) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(() => {\n        getGif(area)\n            .then(imgs => {\n                setState({\n                    data: imgs,\n                    loading: false\n                });\n            })\n            .catch(console.log);\n    }, [area]);\n\n    return state;\n\n}\n\n","import React, { useState } from 'react'\nimport { CategoryAdd } from './components/CategoryAdd.component'\nimport { GifGrid } from './components/GifGrid.component';\n\n// Agregar elementos a un arreglo\nexport const GifExpertApp = () => {\n\n    const [category, setCategory] = useState([\n        {\n            id: 'asdeqwFWer435',\n            area: 'Harry Potter'\n        },\n    ]);\n\n    // const handleAdd = ()=>{\n    //     setCategory( [...category, { id: 'nsberb**&885', area: 'Financne' }] );\n    //     // La funcion del useState recibe un callback\n    //     setCategory( category => [...category, { id: 'nsberb**&885', area: 'Financne' }] );\n    // }\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n\n            <CategoryAdd setCategory={ setCategory }/>\n\n            <hr/>\n            <ol>\n                {\n                    category.map( item => <GifGrid key={ item.id } area={ item.area }/>)\n                }\n            </ol>\n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from \"./GifExpertApp.component\";\nimport 'animate.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}